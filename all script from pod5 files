#!/bin/bash

# Create necessary directories
mkdir -p ./methylation_analysis/{data_pod5,result_dorado,result_modkit,result_matrix,reference,image_singularity}

# Change directory to image_singularity and build the singularity images
cd ./methylation_analysis/image_singularity
# singularity build fast5_to_pod5.sif docker://chrisamiller/pod5-tools:0.2.4
singularity build dorado.sif docker://nanoporetech/dorado:sha58b978562389bd0f1842601fb83cdf1eb2920218
singularity build modkit.sif docker://ontresearch/modkit:mr398_shab20df82474168dd15e8ace78ff38b8bcb8b7b6fb
singularity build samtools.sif docker://biocontainers/samtools:v1.9-4-deb_cv1

# Change directory to reference and download the genomic reference file
cd ../reference
GENOME_URL="https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz"
wget -O hg38.fa.gz "$GENOME_URL"
gunzip hg38.fa.gz

cd ../..

# Prompt the user to enter a path to their data
read -p "Please enter the path to your POD5 data: " data

# Check if the entered path exists
if [ ! -d "$data" ]; then
    echo "The specified path does not exist. Please check and try again."
    exit 1
fi

cd ./methylation_analysis

# Trouve tous les sous-répertoires à l'intérieur du chemin spécifié
data_folders=$(find "$data" -mindepth 1 -maxdepth 1 -type d) # Remplacez /path/to/data_fast5 par votre chemin vers les fichiers fast5
destination="./data_pod5"

# Boucle à travers chaque dossier trouvé
for folder in $data_folders; do
    # Récupère le nom de base du dossier, qui est l'ID du patient
    id_patient=$(basename "$folder")
    # Crée un répertoire pour chaque ID de patient dans le répertoire de destination
    mkdir -p "$destination/$id_patient"

    # Copie le contenu du dossier source vers le dossier de destination
    cp -r "$folder"/* "$destination/$id_patient/"
done

# Ensure that the scripts exist before executing them
SCRIPT_DIR="../script_git"

if [ -f "$SCRIPT_DIR/2-basecalling_dorado_model_v5.0.0.sh" ]; then
    bash "$SCRIPT_DIR/2-basecalling_dorado_model_v5.0.0.sh"
else
    echo "2-basecalling_dorado_model_v5.0.0.sh not found in $SCRIPT_DIR!"
    exit 1
fi

if [ -f "$SCRIPT_DIR/3-indexing_sorted_bam_files.sh" ]; then
    bash "$SCRIPT_DIR/3-indexing_sorted_bam_files.sh"
else
    echo "3-indexing_sorted_bam_files.sh not found in $SCRIPT_DIR!"
    exit 1
fi

if [ -f "$SCRIPT_DIR/4-methylationcalling_modkit.sh" ]; then
    bash "$SCRIPT_DIR/4-methylationcalling_modkit.sh"
else
    echo "4-methylationcalling_modkit.sh not found in $SCRIPT_DIR!"
    exit 1
fi

if [ -f "$SCRIPT_DIR/5-filtering_bed_files.sh" ]; then
    bash "$SCRIPT_DIR/5-filtering_bed_files.sh"
else
    echo "5-filtering_bed_files.sh not found in $SCRIPT_DIR!"
    exit 1
fi

if [ -f "$SCRIPT_DIR/6-basic_matrix.py" ]; then
    python3 "$SCRIPT_DIR/6-basic_matrix.py"
else
    echo "6-basic_matrix.py not found in $SCRIPT_DIR!"
    exit 1
fi
